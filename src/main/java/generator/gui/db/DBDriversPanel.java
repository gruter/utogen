/*
 * DBDriversForm.java
 *
 * Created on 19 May 2007, 14:12
 */

package generator.gui.db;

import generator.gui.*;
import generator.jarloader.JarClassLoader;
import generator.misc.ApplicationContext;
import generator.misc.Constants;
import generator.misc.DBDriverInfo;
import generator.misc.DBDriverInfoSaver;
import generator.jarloader.JarResources;
import generator.misc.Utils;
import java.awt.Component;
import java.io.File;
import java.net.URL;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import org.apache.log4j.Logger;

/**
 *
 * @author  Michael
 */
public class DBDriversPanel extends javax.swing.JPanel
{
    private Vector<DBDriverInfo> vDBDriversInfo;
    private DefaultListModel modelDBData;
    private Logger logger = Logger.getLogger(DBDriversPanel.class);
    
    /** Creates new form DBDriversForm */
    public DBDriversPanel()
    {
        initComponents();
        loadIcons();
        
        modelDBData = new DefaultListModel();
        lstDrivers.setModel(modelDBData);        
        lstDrivers.setCellRenderer( new DBListDriverInfoRenderer() );
    }
    
    public void loadIcons()
    {
        URL urlNew = this.getClass().getClassLoader().getResource("resources/images/document-new.png");
        URL urlRemSelect = this.getClass().getClassLoader().getResource("resources/images/list-remove-small.png");
        URL urlBrowse = this.getClass().getClassLoader().getResource("resources/images/document-open-small.png");
        URL urlSave = this.getClass().getClassLoader().getResource("resources/images/document-save-small.png");
        
        btnNew.setIcon(new ImageIcon(urlNew));
        btnSave.setIcon(new ImageIcon(urlSave));
        btnDelete.setIcon(new ImageIcon(urlRemSelect));
        btnBrowse.setIcon(new ImageIcon(urlBrowse));
        btnSave.setIcon(new ImageIcon(urlSave));
    }
    
    public DBDriversPanel(Vector vDBInfo)
    {
        this();
        vDBDriversInfo = vDBInfo;
        for(int i = 0; i < vDBDriversInfo.size(); i++)
            modelDBData.addElement(vDBDriversInfo.elementAt(i));
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstDrivers = new javax.swing.JList();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtConString = new javax.swing.JTextField();
        txtClass = new javax.swing.JTextField();
        txtLocation = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtCharDelim = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDateDelim = new javax.swing.JTextField();
        txtTimeDelim = new javax.swing.JTextField();
        txtTimestampDelim = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Drivers"));

        lstDrivers.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lstDrivers.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstDrivers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstDriversValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstDrivers);

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 131, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Driver information"));

        jLabel1.setText("Driver name:");

        jLabel2.setText("Connection prefix:");

        jLabel3.setText("Driver class:");

        jLabel4.setText("JAR file location:");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        btnBrowse.setText("Browse...");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Character, date, time delimiters"));

        jLabel5.setText("Character delimiter:");

        jLabel6.setText("Date delimiter:");

        jLabel7.setText("Time delimiter:");

        jLabel8.setText("Timestamp delimiter:");

        jLabel9.setText("A character used to enclose Strings, for example: ' or \"");

        jLabel10.setText("<html>use <i>$VALUE</i> where the generated date should appear, for example: </html>");

        jLabel11.setText("to_string('$VALUE','YYYY-MM-DD'), or #$VALUE#");

        jLabel12.setText("When you choose a specific format, (as above), your generated date should match that!");

        jLabel13.setText("same as date delimiter");

        jLabel14.setText("same as date delimiter");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel5)
                            .add(jLabel6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtCharDelim, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(txtDateDelim, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel8)
                            .add(jLabel7))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtTimestampDelim, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .add(txtTimeDelim, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel12)
                    .add(jLabel11)
                    .add(jLabel9)
                    .add(jLabel10)
                    .add(jLabel13)
                    .add(jLabel14))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jLabel9)
                    .add(txtCharDelim, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel6)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel10)
                        .add(txtDateDelim, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel11)
                .add(7, 7, 7)
                .add(jLabel12)
                .add(20, 20, 20)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(txtTimeDelim, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel13))
                .add(8, 8, 8)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(txtTimestampDelim, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel14))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel2)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel3)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                        .add(txtLocation, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnBrowse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, txtName)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, txtClass)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, txtConString, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)))
                .addContainerGap())
            .add(jPanel4Layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(txtConString, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(txtClass, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(btnBrowse)
                    .add(txtLocation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(21, 21, 21)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(16, 16, 16)
                        .add(btnNew, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 637, Short.MAX_VALUE)
                        .add(btnDelete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(19, 19, 19)
                        .add(btnSave, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(btnDelete)
                            .add(btnSave)
                            .add(btnNew))))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnNewActionPerformed
    {//GEN-HEADEREND:event_btnNewActionPerformed
        txtName.setText("");
        txtLocation.setText("");
        txtConString.setText("");
        txtClass.setText("");
    }//GEN-LAST:event_btnNewActionPerformed
    
    
    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDeleteActionPerformed
    {//GEN-HEADEREND:event_btnDeleteActionPerformed
        int row = lstDrivers.getSelectedIndex();
        
        if(row==-1)
            return;

        int answer;
        answer = JOptionPane.showConfirmDialog(this,"Are you sure you want to delete the displayed driver?","Confirmation",JOptionPane.YES_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(answer==1)
            return;
        
        modelDBData.remove(row);
        if(row<modelDBData.size())
            lstDrivers.setSelectedIndex(row);
        else if(modelDBData.size()>0)
            lstDrivers.setSelectedIndex(modelDBData.size()-1);
        saveData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    
    
    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBrowseActionPerformed
    {//GEN-HEADEREND:event_btnBrowseActionPerformed
        String inputFile="";
        JarClassLoader jarLoader;
        boolean error;
        
        JFileChooser chooser = new JFileChooser();
        ListJARFilter filter = new ListJARFilter();
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION)
            inputFile = chooser.getSelectedFile().getPath();
        txtLocation.setText(inputFile);
    }//GEN-LAST:event_btnBrowseActionPerformed
   
    
    
    private void updateDBDriverInfo(DBDriverInfo dbDriverInfoToAdd)
    {
        DBDriverInfo dbDriverInfoOld;
        
        int existPos;
        
        //check that this driver exists
        existPos=-1;
        for(int i=0; i<modelDBData.size(); i++)
        {
            dbDriverInfoOld = (DBDriverInfo) modelDBData.elementAt(i);
            if(dbDriverInfoOld.getName().equalsIgnoreCase(dbDriverInfoToAdd.getName()))
                existPos=i;
        }
        
        if(existPos!=-1)
        {
            modelDBData.setElementAt(dbDriverInfoToAdd,existPos);
            logger.debug("Overwritten existing element at position:"+existPos);
        }
        else
        {
            modelDBData.addElement(dbDriverInfoToAdd);
            logger.debug("Addind a new element at the end of list");
        }
    }
    
    
    
    private boolean saveData()
    {
        boolean success = true;
        
        vDBDriversInfo.removeAllElements();
        for (int i = 0; i < modelDBData.getSize(); i++)
            vDBDriversInfo.add( (DBDriverInfo)modelDBData.get(i));
        
        try
        {
            DBDriverInfoSaver driversSaver= new DBDriverInfoSaver();
            driversSaver.saveData(vDBDriversInfo);
            ApplicationContext.getInstance().setDBDriver(vDBDriversInfo);
        }
        catch(Exception e)
        {
            logger.error("Text data not saved", e);
            success = false;
        }
        return success;
    }
    
    
    
    private void lstDriversValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_lstDriversValueChanged
    {//GEN-HEADEREND:event_lstDriversValueChanged
        if(lstDrivers.getSelectedIndex()==-1)
            return;
        
        DBDriverInfo dbDriverInfo = (DBDriverInfo) lstDrivers.getSelectedValue();
        
        txtName.setText(dbDriverInfo.getName());
        txtLocation.setText(dbDriverInfo.getLocationClass());
        txtConString.setText(dbDriverInfo.getConString());
        txtClass.setText(dbDriverInfo.getLoadClass());
        txtCharDelim.setText(dbDriverInfo.getCharDelimiter());
        txtDateDelim.setText(dbDriverInfo.getDateDelimiter());
        txtTimeDelim.setText(dbDriverInfo.getTimeDelimiter());
        txtTimestampDelim.setText(dbDriverInfo.getTimestampDelimiter());
    }//GEN-LAST:event_lstDriversValueChanged
    
    
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveActionPerformed
    {//GEN-HEADEREND:event_btnSaveActionPerformed
        DBDriverInfo dbDriverInfo;
        
        String name      = txtName.getText();
        String conString = txtConString.getText();
        String driverClass = txtClass.getText();
        String driverLocation = txtLocation.getText();
        String charDelim = txtCharDelim.getText();
        String dateDelim = txtDateDelim.getText();
        String timeDelim = txtTimeDelim.getText();
        String timestampDelim = txtTimestampDelim.getText();
        
        boolean loadError = false;
        JarClassLoader jarClassLoader;
        String msg, msgTitle;
        int status, msgType;
        
        if(name.trim().length()==0)
        {
            JOptionPane.showMessageDialog(this,"Please provide a name.","Required field",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(conString.trim().length()==0)
        {
            JOptionPane.showMessageDialog(this,"Please provide a prefix.","Required field",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(driverClass.trim().length()==0)
        {
            JOptionPane.showMessageDialog(this,"Please provide a class driver.","Required field",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(driverLocation.trim().length()==0)
        {
            JOptionPane.showMessageDialog(this,"Please provide a location for the driver.","Required field",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(charDelim.trim().length()==0)
        {
            JOptionPane.showMessageDialog(this,"An enclosing character for String was not specified, single quote will be used.","Required value",JOptionPane.WARNING_MESSAGE);
            charDelim="'";
        }
        
        if(dateDelim.trim().length()==0 || dateDelim.indexOf(Constants.DATE_DELIM)==-1)
        {
            JOptionPane.showMessageDialog(this,"$VALUE not used, please provide enclosing characters for date.","Required value",JOptionPane.ERROR_MESSAGE);
            charDelim="'";
            return;
        }        

        if(timeDelim.trim().length()==0 || timeDelim.indexOf(Constants.DATE_DELIM)==-1)
        {
            JOptionPane.showMessageDialog(this,"$VALUE not used, please provide enclosing characters for time.","Required value",JOptionPane.ERROR_MESSAGE);
            charDelim="'";
            return;
        }        
        
        if(timestampDelim.trim().length()==0 || timestampDelim.indexOf(Constants.DATE_DELIM)==-1)
        {
            JOptionPane.showMessageDialog(this,"$VALUE not used, please provide enclosing characters for timestamp.","Required value",JOptionPane.ERROR_MESSAGE);
            charDelim="'";
            return;
        }        

        
        //try to load the provided driver and find the class in it
        jarClassLoader = new JarClassLoader(driverLocation);
        Class c;
        loadError=false;
        try
        {
            c = jarClassLoader.loadClass(driverClass, true);
            Object o = c.newInstance();
        }
        catch (InstantiationException ex)
        {
            loadError = true;
            logger.warn("Instantiation exception for :"+driverClass, ex);
        }
        catch (IllegalAccessException ex)
        {
            loadError = true;
            logger.warn("IllegalAccess exception for :"+driverClass, ex);
        }
        catch (ClassNotFoundException ex)
        {
            loadError = true;
            logger.warn("ClassNotFound exception for :"+driverClass, ex);
        }
        
        status = Constants.DRIVER_OK;
        msg = "Driver definition saved";
        msgTitle = "Information";
        msgType  = JOptionPane.INFORMATION_MESSAGE;
        if(loadError)
        {
            status = Constants.DRIVER_NOT_OK;
            msg = "Driver definition saved, but with errors.";
            msgTitle = "Warning";
            msgType  = JOptionPane.WARNING_MESSAGE;
        }
        
        dbDriverInfo = new DBDriverInfo();
        dbDriverInfo.setName(name);
        dbDriverInfo.setConString(conString);
        dbDriverInfo.setLoadClass(driverClass);
        dbDriverInfo.setLocationClass(driverLocation);
        dbDriverInfo.setStatus(status);
        dbDriverInfo.setCharDelimiter(charDelim);
        dbDriverInfo.setDateDelimiter(dateDelim);
        dbDriverInfo.setTimeDelimiter(timeDelim);
        dbDriverInfo.setTimestampDelimiter(timestampDelim);
        
        //update the model with new info
        updateDBDriverInfo(dbDriverInfo);
        
        saveData();
        
        JOptionPane.showMessageDialog(this,msg,msgTitle,msgType);
    }//GEN-LAST:event_btnSaveActionPerformed
    
       
    private void txtNameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtNameActionPerformed
    {//GEN-HEADEREND:event_txtNameActionPerformed

    }//GEN-LAST:event_txtNameActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstDrivers;
    private javax.swing.JTextField txtCharDelim;
    private javax.swing.JTextField txtClass;
    private javax.swing.JTextField txtConString;
    private javax.swing.JTextField txtDateDelim;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtTimeDelim;
    private javax.swing.JTextField txtTimestampDelim;
    // End of variables declaration//GEN-END:variables
    
}


/** Filter to work with JFileChooser to select java file types. **/
class ListJARFilter extends javax.swing.filechooser.FileFilter
{
    public boolean accept(File f)
    {
        return f.getName().toLowerCase().endsWith(".jar") || f.isDirectory();
    }
    
    public String getDescription()
    {
        return "jar files";
    }
}