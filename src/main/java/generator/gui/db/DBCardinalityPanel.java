/*
 * DBCardinalityEditor.java
 *
 * Created on 22 June 2007, 17:09
 */

package generator.gui.db;

import generator.db.DBForeignKey;
import generator.gui.*;
import generator.gui.graph.DBCardinalityGenerator;
import generator.db.DBTableGenerator;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author  Michael
 */
public class DBCardinalityPanel extends javax.swing.JPanel
{
    private DBCardinalityGenerator dbCardinality;
    private DBTableGenerator fromTable, toTable;
    private DBForeignKey dbForeignKey;

    /** Creates new form DBCardinalityEditor */
    public DBCardinalityPanel()
    {
        initComponents();
        radExactly.setSelected(true);
        dbForeignKey = new DBForeignKey();
    }

    public void setCardinality(DBCardinalityGenerator oCardinality)
    {
        this.dbCardinality = oCardinality;
        setTables();
    }
    
    public void setTables()
    {
        fromTable = dbCardinality.getFromTable();
        toTable   = dbCardinality.getToTable();


        lstMaster.setListData( fromTable.getFieldNames() );
        lstDetails.setListData( toTable.getFieldNames() );
        lstKeys.setListData(new Object[0]);
        
        lblMaster1.setText(fromTable.getName());
        lblMaster2.setText(fromTable.getName());
        lblDetails1.setText(toTable.getName());
        lblDetails2.setText(toTable.getName());

        //for all the fieldnames get the foreign keys (from master table)
        //ad them to the list of linked keys
        Vector vData = new Vector();
        Object toFields[] = toTable.getFieldNames();
        for(int i=0; i<toFields.length; i++)
        {
            
            String s = toTable.getForeignKeyForField((String)toFields[i]);
            if(s!=null && s.length()>0)
            {
                vData.add(s + "->" + toTable.getName() + "." + toFields[i]);
            }
        }
        lstKeys.setListData(vData);


        spinExactly.setValue( dbCardinality.getToNum() );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnSave = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblText1 = new javax.swing.JLabel();
        lblMaster2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        radExactly = new javax.swing.JRadioButton();
        spinExactly = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        lblDetails2 = new javax.swing.JLabel();
        radBetween = new javax.swing.JRadioButton();
        spinFrom = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        spinTo = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstMaster = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstDetails = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnLink = new javax.swing.JButton();
        btnClearAll = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstKeys = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        lblMaster1 = new javax.swing.JLabel();
        lblDetails1 = new javax.swing.JLabel();

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Number of records"));

        lblText1.setText("For every record in");

        lblMaster2.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        lblMaster2.setText("TABLE1");

        jLabel6.setText("generate:");

        buttonGroup1.add(radExactly);
        radExactly.setText("Exactly");
        radExactly.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel4.setText("records in ");

        lblDetails2.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        lblDetails2.setText("TABLE2");

        buttonGroup1.add(radBetween);
        radBetween.setText("Between");
        radBetween.setMargin(new java.awt.Insets(0, 0, 0, 0));
        radBetween.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBetweenActionPerformed(evt);
            }
        });

        jLabel3.setText("and");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(lblText1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(lblMaster2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel6))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                                .add(radExactly)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(spinExactly, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                                .add(radBetween)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(spinFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jLabel3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(spinTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jLabel4)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(lblDetails2)))))
                .addContainerGap(335, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblText1)
                    .add(lblMaster2)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(radExactly)
                    .add(spinExactly, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4)
                    .add(lblDetails2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(radBetween)
                    .add(spinFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(spinTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Foreign keys definition"));

        lstMaster.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstMaster);

        lstDetails.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstDetails);

        jLabel1.setText("Parent:");

        jLabel2.setText("Child:");

        btnLink.setText("Link Keys");
        btnLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLinkActionPerformed(evt);
            }
        });

        btnClearAll.setText("Clear Keys");
        btnClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllActionPerformed(evt);
            }
        });

        lstKeys.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(lstKeys);

        jLabel8.setText("Keys:");

        lblMaster1.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        lblMaster1.setText("TABLE1");

        lblDetails1.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        lblDetails1.setText("TABLE2");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(lblMaster1))
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(lblDetails1))
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(btnLink, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel8)
                    .add(btnClearAll, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(jLabel1)
                            .add(lblMaster1)
                            .add(lblDetails1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jScrollPane2)
                            .add(jScrollPane1)))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(jLabel8)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane3)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnClearAll)
                    .add(btnLink)))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(btnSave, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnSave)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveActionPerformed
    {//GEN-HEADEREND:event_btnSaveActionPerformed
        String relation = "1:" + spinExactly.getValue();
        int spinFrom, spinTo;

        try
        {
            spinFrom= (Integer)spinExactly.getValue();
        }
        catch(Exception e)
        {
            spinFrom=0;
        }

        try
        {
            spinTo= (Integer)spinExactly.getValue();
        }
        catch(Exception e)
        {
            spinTo=0;
        }

        if(radExactly.isSelected())
        {
            relation = "1:" + spinExactly.getValue();
            dbCardinality.setFromNum(-1);
            dbCardinality.setToNum(spinTo);
        }
        else
        {
            relation = "1:[" + spinFrom + ".." + spinTo +"]";
            dbCardinality.setFromNum(spinFrom);
            dbCardinality.setToNum(spinTo);
        }
        dbCardinality.setRelation(relation);
        getTopLevelAncestor().setVisible(false);

        //this is not so good, do we need the cardinality in all the foreign keys?
        dbForeignKey.setFromNum( dbCardinality.getFromNum() );
        dbForeignKey.setToNum( dbCardinality.getToNum() );
    }//GEN-LAST:event_btnSaveActionPerformed


    
    private void radBetweenActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_radBetweenActionPerformed
    {//GEN-HEADEREND:event_radBetweenActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_radBetweenActionPerformed

    private void btnLinkActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnLinkActionPerformed
    {//GEN-HEADEREND:event_btnLinkActionPerformed
        dbForeignKey.setMasterTable(fromTable.getName());
        dbForeignKey.setDetailsTable(toTable.getName());

        int fromIdx, toIdx;
        fromIdx = lstMaster.getSelectedIndex();
        toIdx   = lstDetails.getSelectedIndex();

        if(fromIdx==-1 || toIdx==-1)
        {
            JOptionPane.showMessageDialog(this, "Please select two keys that will be linked");
            return;
        }

        String fromField, toField;
        fromField = (String) lstMaster.getSelectedValue();
        toField   = (String) lstDetails.getSelectedValue();

        dbForeignKey.setMasterField(fromField);
        dbForeignKey.setDetailsField(toField);


        //add the foreign key to listbox and toTable
        int size = lstKeys.getModel().getSize();
        Vector vData = new Vector();

        for(int i=0; i<size; i++)
        {
            vData.add((String) lstKeys.getModel().getElementAt(i) );
        }

        String k = dbForeignKey.getMasterTable() + "." + dbForeignKey.getMasterField() +"->"+
                   dbForeignKey.getDetailsTable() + "." + dbForeignKey.getDetailsField();
        if( vData.contains( k )==false )
        {
            vData.add( k );
            lstKeys.setListData(vData);
        }

        //this foreign key now needs to be set as a generator for this field in toTable
        int numOfFields = toTable.getNumFields();
        for(int i=0; i<numOfFields; i++)
        {
            String field = toTable.fieldNameAt(i);

            String fkey = toTable.getForeignKeyForField( field );
            if( fkey.length()>0 )
            {
                toTable.setFieldGenerator(i,fkey);
            }
        }

        toTable.addUpdateForeignKey(dbForeignKey);
    }//GEN-LAST:event_btnLinkActionPerformed

    
    private void btnClearAllActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnClearAllActionPerformed
    {//GEN-HEADEREND:event_btnClearAllActionPerformed
        toTable.clearForeignKeys();
        lstKeys.removeAll();
    }//GEN-LAST:event_btnClearAllActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearAll;
    private javax.swing.JButton btnLink;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDetails1;
    private javax.swing.JLabel lblDetails2;
    private javax.swing.JLabel lblMaster1;
    private javax.swing.JLabel lblMaster2;
    private javax.swing.JLabel lblText1;
    private javax.swing.JList lstDetails;
    private javax.swing.JList lstKeys;
    private javax.swing.JList lstMaster;
    private javax.swing.JRadioButton radBetween;
    private javax.swing.JRadioButton radExactly;
    private javax.swing.JSpinner spinExactly;
    private javax.swing.JSpinner spinFrom;
    private javax.swing.JSpinner spinTo;
    // End of variables declaration//GEN-END:variables
    
}
