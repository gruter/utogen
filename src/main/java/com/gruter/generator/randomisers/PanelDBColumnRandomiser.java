package com.gruter.generator.randomisers;

import generator.extenders.RandomiserInstance;
import generator.extenders.RandomiserPanel;

import java.util.LinkedHashMap;

import javax.swing.JOptionPane;

import org.apache.log4j.Logger;

@SuppressWarnings("serial")
public class PanelDBColumnRandomiser extends RandomiserPanel {
  Logger logger = Logger.getLogger(PanelDBColumnRandomiser.class);

  public PanelDBColumnRandomiser() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    jPanel2 = new javax.swing.JPanel();
    jLabel4 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    txtName = new javax.swing.JTextField();
    jScrollPane1 = new javax.swing.JScrollPane();
    txtDescription = new javax.swing.JTextArea();
    jPanel1 = new javax.swing.JPanel();
    txtJdbc = new javax.swing.JTextField();
    txtConnUrl = new javax.swing.JTextField();
    txtUserId = new javax.swing.JTextField();
    txtPassword = new javax.swing.JTextField();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel7 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    jLabel8 = new javax.swing.JLabel();
    txtMaxItems = new javax.swing.JTextField();
    jScrollPane2 = new javax.swing.JScrollPane();
    txtQuery = new javax.swing.JTextArea();

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Case description"));

    jLabel4.setText("Name:");

    jLabel5.setText("Description:");

    txtDescription.setColumns(20);
    txtDescription.setFont(new java.awt.Font("Tahoma", 0, 11));
    txtDescription.setLineWrap(true);
    txtDescription.setRows(5);
    jScrollPane1.setViewportView(txtDescription);

    org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
        .add(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel4)
                .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel5))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(txtName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 207, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
        .add(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jLabel4)
                .add(txtName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jLabel5)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
            .addContainerGap())
    );

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Properties"));

    txtPassword.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            txtPasswordActionPerformed(evt);
        }
    });

    jLabel1.setText("JDBC Driver:");

    jLabel2.setText("Password:");

    jLabel7.setText("User Id:");

    jLabel3.setText("Conn. URL:");

    jLabel6.setText("Query:");

    jLabel8.setText("Max items:");

    txtQuery.setColumns(20);
    txtQuery.setRows(5);
    jScrollPane2.setViewportView(txtQuery);

    org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
        .add(jPanel1Layout.createSequentialGroup()
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel1Layout.createSequentialGroup()
                    .add(23, 23, 23)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jLabel3)
                        .add(jLabel7)
                        .add(jLabel1)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel8)
                            .add(jLabel2)))
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(txtMaxItems)
                        .add(txtPassword)
                        .add(txtConnUrl)
                        .add(txtUserId)
                        .add(txtJdbc, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)))
                .add(jPanel1Layout.createSequentialGroup()
                    .add(57, 57, 57)
                    .add(jLabel6)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)))
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
        .add(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(txtJdbc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel1))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(txtConnUrl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel3))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jLabel7)
                .add(txtUserId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(txtPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel2))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jLabel8)
                .add(txtMaxItems, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(18, 18, 18)
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jLabel6)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(55, 55, 55))
    );

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
        .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
        .add(layout.createSequentialGroup()
            .addContainerGap()
            .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(17, 17, 17)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 364, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel1.getAccessibleContext().setAccessibleName("Database properties");
  }// </editor-fold>

  private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
  }

  public boolean isFormValid() {
    // run checks, empty strings, no data in the table
    if (txtName.getText().trim().length() == 0) {
      JOptionPane.showMessageDialog(this, "Please provide a value for the name", "Required field",
          JOptionPane.ERROR_MESSAGE);
      return false;
    }

    if (txtJdbc.getText().trim().length() == 0) {
      JOptionPane.showMessageDialog(this, "Please provide a value for the jdbc driver", "Required field",
          JOptionPane.ERROR_MESSAGE);
      return false;
    }

    if (txtConnUrl.getText().trim().length() == 0) {
      JOptionPane.showMessageDialog(this, "Please provide a value for the conn url", "Required field",
          JOptionPane.ERROR_MESSAGE);
      return false;
    }

    if (txtUserId.getText().trim().length() == 0) {
      JOptionPane.showMessageDialog(this, "Please provide a value for the conn user id", "Required field",
          JOptionPane.ERROR_MESSAGE);
      return false;
    }

    if (txtPassword.getText().trim().length() == 0) {
      JOptionPane.showMessageDialog(this, "Please provide a value for the password", "Required field",
          JOptionPane.ERROR_MESSAGE);
      return false;
    }
    
    if (txtQuery.getText().trim().length() == 0) {
      JOptionPane.showMessageDialog(this, "Please provide a value for the query", "Required field",
          JOptionPane.ERROR_MESSAGE);
      return false;
    }
    
    return true;
  }

  public RandomiserInstance getRandomiserInstance() {
    RandomiserInstance ri = new RandomiserInstance();
    LinkedHashMap<String, String> hashmap = new LinkedHashMap<String, String>();

    ri.setName(txtName.getText());
    ri.setDescription(txtDescription.getText());
    ri.setRandomiserType("DBColumnRandomiser");

    hashmap.put("driver", txtJdbc.getText());
    hashmap.put("connUrl", txtConnUrl.getText());
    hashmap.put("userId", txtUserId.getText());
    hashmap.put("password", txtPassword.getText());
    hashmap.put("query", txtQuery.getText());
    hashmap.put("maxItems", ifNull(txtMaxItems.getText(), "0"));
    ri.setProperties(hashmap);
    
    return ri;
  }

  private String ifNull(String value, String defaultValue) {
    return value == null ? defaultValue : value;
  }
  
  @SuppressWarnings("unchecked")
  public void initialise(RandomiserInstance ri) {
    txtName.setText(ri.getName());
    txtDescription.setText(ri.getDescription());

    LinkedHashMap<String, String> hashmap = ri.getProperties();

    txtJdbc.setText(hashmap.get("driver"));
    txtConnUrl.setText(hashmap.get("connUrl"));
    txtUserId.setText(hashmap.get("userId"));
    txtPassword.setText(hashmap.get("password"));
    txtQuery.setText(hashmap.get("query"));
    txtMaxItems.setText(hashmap.get("maxItems"));
  }

  // Variables declaration - do not modify
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JTextField txtConnUrl;
  private javax.swing.JTextArea txtDescription;
  private javax.swing.JTextField txtJdbc;
  private javax.swing.JTextField txtMaxItems;
  private javax.swing.JTextField txtName;
  private javax.swing.JTextField txtPassword;
  private javax.swing.JTextArea txtQuery;
  private javax.swing.JTextField txtUserId;
  // End of variables declaration

}
